name: ci-cd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  ci:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Check-out repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        conda env create -f environment.yml
        echo "Initialize Conda"
        eval "$(conda shell.bash hook)"
        conda init bash
        conda activate fundaml

    # - name: Test with pytest
    #   run: |
    #     echo "Initialize Conda"
    #     eval "$(conda shell.bash hook)"
    #     conda init bash
    #     conda activate fundaml
    #     poetry run pytest tests/ --cov-branch --cov=fundaml --cov-report=xml

    - name: Install package
      run: | 
        echo "Initialize Conda"
        eval "$(conda shell.bash hook)"
        conda init bash
        conda activate fundaml
        poetry install

    - name: Use Codecov to track coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        flags: unittests # optional
        name:  fundaml # optional
        files: ./coverage.xml   # coverage report
    
    - name: Build documentation
      run: |
        echo "Initialize Conda"
        eval "$(conda shell.bash hook)"
        conda init bash
        conda activate fundaml
        poetry run make html --directory docs/
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
          # Upload entire repository
          path: 'docs/_build/html'
          
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1
      
  cd:
      # Only run this job if the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to the "main" branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Check-out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Use Python Semantic Release to prepare release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          poetry run semantic-release publish

    - name: Build package
      run: poetry build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Test install from TestPyPI
      run: |
          pip install \
          fundaml

